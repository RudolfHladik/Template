[versions]
kotlin = "1.6.0"
agp = "7.0.3"
detekt = "1.17.0"
ktlint = "10.0.0"
compose = "1.1.0-rc01"
serialization = "1.2.2"
coroutines = "1.6.0-RC"
ktorVer = "1.6.2-native-mm-eap-196"
sqlDelight = "1.5.3"
testing-junit = "4.13.2"
activity = "1.3.0-rc01"
constraintLayout = "1.0.0-alpha08"
appcompat = "1.3.1"
lifecycle = "2.3.1"

[libraries]
# Plugins
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp"}
detektPlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
ktlintPlugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }

# KotlinX
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines"}
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization"}
kotlinx-serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization"}

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorVer"}
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorVer"}
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktorVer"}

# SQL Delight
sqldelight-plugin = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqlDelight" }
sqldelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqlDelight" }
sqldelight-ext = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-ios = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqlDelight" }

# AndroidX
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-lifecycleKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
# Compose
androidx-composeUi = { module = "androidx.compose.ui:ui", version.ref = "compose"}
androidx-composeMaterial = { module = "androidx.compose.material:material", version.ref = "compose" }
androidx-composeUiTooling = { module = "androidx.compose.ui:ui-tooling", version = "1.0.0-beta09" } #Replace to compose version when fixed preview on current version
androidx-composeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
androidx-composeFoundationLayout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "compose" }
androidx-composeRuntime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
androidx-composeActivity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
androidx-composeConstraint = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintLayout" }

testing-junit = { module = "junit:junit", version.ref = "testing-junit"}

[bundles]
androidx-compose = [ "androidx-composeUi", "androidx-composeMaterial", "androidx-composeUiTooling", "androidx-composeFoundation", "androidx-composeFoundationLayout", "androidx-composeRuntime", "androidx-composeActivity", "androidx-composeConstraint" ]
